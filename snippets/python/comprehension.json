{
  "Dictionary comprehension": {
    "body": "{${1:key}: ${2:value} for ${3:key}, ${4:value} in ${5:iterable}}$0",
    "description": "Handy and faster way to create dictories based on existing dictionaries.",
    "prefix": "dc"
  },
  "Dictionary comprehension if filter": {
    "body": "{${1:key}: ${2:value} for ${3:key}, ${4:value} in ${5:iterable} if ${6:condition}}$0",
    "description": "Handy and faster way to create dictories based on existing dictionaries, with conditional if statement.",
    "prefix": "dci"
  },
  "Generator comprehension": {
    "body": "(${1:key} for ${2:value} in ${3:iterable})$0",
    "description": "Create a generator based on existing iterables.",
    "prefix": "gc"
  },
  "Generator comprehension if filter": {
    "body": "(${1:key} for ${2:value} in ${3:iterable} if ${4:condition})$0",
    "description": "Create a generator based on existing iterables, with condition if statement.",
    "prefix": "gci"
  },
  "List comprehension": {
    "body": "[${1:value} for ${2:value} in ${3:iterable}]$0",
    "description": "List comprehension for creating a list based on existing lists.",
    "prefix": "lc"
  },
  "List comprehension if else": {
    "body": "[${1:value} if ${2:condition} else ${3:condition} for ${4:value} in ${5:iterable}]$0",
    "description": "List comprehension for creating a list based on existing lists, with conditional if-else statement.",
    "prefix": "lcie"
  },
  "List comprehension if filter": {
    "body": "[${1:value} for ${2:value} in ${3:iterable} if ${4:condition}$0]",
    "description": "List comprehension for creating a list based on existing lists, with conditional if statement.",
    "prefix": "lci"
  },
  "Set Comprehension if filter": {
    "body": "{${1:value} for ${2:value} in ${3:iterable} if ${4:condition}}$0",
    "description": "Create a set based on existing iterables, with condition if statement.",
    "prefix": "sci"
  },
  "Set comprehension": {
    "body": "{${1:value} for ${2:value} in ${3:iterable}}$0",
    "description": "Create a set based on existing iterables.",
    "prefix": "sc"
  }
}
